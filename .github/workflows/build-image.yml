name: build Debian Live image
on:
  push:
    branches-ignore:
      - 'main'
    paths:
      - "debian-live/build.env"
      - "debian-live/build.sh"
      - "debian-live/config/**"
jobs:
  buildImageRelease:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - name: checkout code
        uses: "actions/checkout@v4"
      - name: prepare environment
        run: debian-live/build.sh prepareEnvironment
      - name: remove not required folders from the build system
        run: debian-live/build.sh cleanupRunner
      - name: Fetch build system infos
        run: debian-live/build.sh fetchRunnerInfos
      - name: install prerequisites
        run: debian-live/build.sh installPrerequisites
      - name: config Debian Live image
        run: debian-live/build.sh configImage
      - name: build Debian Live image
        run: debian-live/build.sh buildImage
      - name: create build artifact
        uses: actions/upload-artifact@v4
        with:
          name: iksdp-desktop-${{ env.RELEASE_VERSION }}
          path: "${{ env.BUILD_DIR }}/debian-live-${{ env.DEBIAN_VERSION }}-${{ env.RELEASE_VERSION }}-${{ env.IMAGE_TIMESTAMP }}-${{ env.DEBIAN_ARCH }}.hybrid.iso"
          retention-days: 1
          if-no-files-found: error
      - name: upload iso
        run: | 
          mkdir -p ~/.ssh/
          echo -n "${{ vars.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          eval $(ssh-agent -s)
          echo "${{ secrets.SSH_UPLOAD_KEY }}" | tr -d '\r' | ssh-add -
          ssh-add -l
          scp -P 10022 ~/build/debian-live-${{ env.DEBIAN_VERSION }}-${{ env.RELEASE_VERSION }}-${{ env.IMAGE_TIMESTAMP }}-${{ env.DEBIAN_ARCH }}.hybrid.iso isotransfer@185.16.111.34:/data/www/

      - name: create release
        uses: ncipollo/release-action@v1
        with:
          name: iksdp-desktop-${{ env.RELEASE_VERSION }}
          artifacts: "${{ env.BUILD_DIR }}/iksdp-desktop-source-${{ env.RELEASE_VERSION }}.tar.gz" 
          bodyFile: "${{ env.BUILD_DIR }}/changeLogForRelease.md"
          tag: "v${{ env.RELEASE_VERSION }}"
          draft: true
          makeLatest: "legacy"
          skipIfReleaseExists: true
          allowUpdates: true
          updateOnlyUnreleased: true
